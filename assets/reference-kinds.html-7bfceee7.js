const e=JSON.parse('{"key":"v-b56b3f84","path":"/java/jvm/reference-kinds.html","title":"引用的类型","lang":"en-US","frontmatter":{"title":"引用的类型","date":"2023-09-07T00:00:00.000Z","category":"java","tag":["Java","Jvm"]},"headers":[{"level":2,"title":"强引用","slug":"强引用","link":"#强引用","children":[]},{"level":2,"title":"软引用","slug":"软引用","link":"#软引用","children":[]},{"level":2,"title":"弱引用","slug":"弱引用","link":"#弱引用","children":[]},{"level":2,"title":"虚引用","slug":"虚引用","link":"#虚引用","children":[]},{"level":2,"title":"FAQ","slug":"faq","link":"#faq","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1694501966000,"updatedTime":1694501966000},"readingTime":{"minutes":1.9,"words":569},"filePathRelative":"java/jvm/reference-kinds.md","localizedDate":"September 7, 2023","excerpt":"<p>在Java中提供了4个级别的引用：强引用、软引用、弱引用和虚引用。之所以整出这么多的引用类型，是因为引用也有轻重缓急，分门别类有助于GC更好的进行垃圾回收。下面我们就来具体看下这些引用类型。</p>\\n<h2> 强引用</h2>\\n<p>强引用就是程序中一般使用的引用类型，强引用的对象是可触及的，不会被回收。下面是一个强引用的例子</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token class-name\\">Object</span> object <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Object</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"huhx","license":"MIT"}}');export{e as data};
