import{_ as n,r as c,o as i,c as r,a,b as s,e as h,d as t}from"./app-57542e83.js";const d={},o={href:"https://www.baeldung.com/spring-cache-tutorial",target:"_blank",rel:"noopener noreferrer"},l=t(`<h2 id="开启caching" tabindex="-1"><a class="header-anchor" href="#开启caching" aria-hidden="true">#</a> 开启Caching</h2><p>在springboot中使用cache的话，首先要引入依赖：</p><div class="language-groovy line-numbers-mode" data-ext="groovy"><pre class="language-groovy"><code>implementation <span class="token string">&#39;org.springframework.boot:spring-boot-starter-cache&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后我们需要使用<code>@EnableCaching</code>显示的开启cache：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token annotation punctuation">@EnableCaching</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CachingConfig</span> <span class="token punctuation">{</span>
    <span class="token comment">// cache config ....</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用cache注解" tabindex="-1"><a class="header-anchor" href="#使用cache注解" aria-hidden="true">#</a> 使用Cache注解</h2><h3 id="cacheable" tabindex="-1"><a class="header-anchor" href="#cacheable" aria-hidden="true">#</a> @Cacheable</h3><h3 id="cacheevict" tabindex="-1"><a class="header-anchor" href="#cacheevict" aria-hidden="true">#</a> @CacheEvict</h3><h3 id="cacheput" tabindex="-1"><a class="header-anchor" href="#cacheput" aria-hidden="true">#</a> @CachePut</h3><h3 id="caching" tabindex="-1"><a class="header-anchor" href="#caching" aria-hidden="true">#</a> @Caching</h3><h3 id="cacheconfig" tabindex="-1"><a class="header-anchor" href="#cacheconfig" aria-hidden="true">#</a> @CacheConfig</h3><h2 id="使用条件cache" tabindex="-1"><a class="header-anchor" href="#使用条件cache" aria-hidden="true">#</a> 使用条件Cache</h2><h3 id="condition-parameter" tabindex="-1"><a class="header-anchor" href="#condition-parameter" aria-hidden="true">#</a> Condition Parameter</h3><h3 id="unless-parameter" tabindex="-1"><a class="header-anchor" href="#unless-parameter" aria-hidden="true">#</a> Unless Parameter</h3><h2 id="spring-cache原理" tabindex="-1"><a class="header-anchor" href="#spring-cache原理" aria-hidden="true">#</a> Spring Cache原理</h2>`,15);function p(u,g){const e=c("ExternalLinkIcon");return i(),r("div",null,[a("p",null,[a("a",o,[s("https://www.baeldung.com/spring-cache-tutorial"),h(e)])]),l])}const m=n(d,[["render",p],["__file","all-in-cache.html.vue"]]);export{m as default};
