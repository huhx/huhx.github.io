const e=JSON.parse('{"key":"v-e9ce9cce","path":"/java/base/regex-pattern.html","title":"无所不能的正则","lang":"en-US","frontmatter":{"title":"无所不能的正则","date":"2023-07-24T00:00:00.000Z","category":"java","tag":["Java"]},"headers":[{"level":2,"title":"什么是正则表达式","slug":"什么是正则表达式","link":"#什么是正则表达式","children":[]},{"level":2,"title":"字符串文字","slug":"字符串文字","link":"#字符串文字","children":[]},{"level":2,"title":"方括号内字符","slug":"方括号内字符","link":"#方括号内字符","children":[]},{"level":2,"title":"预定义字符","slug":"预定义字符","link":"#预定义字符","children":[]},{"level":2,"title":"匹配次数量词","slug":"匹配次数量词","link":"#匹配次数量词","children":[]},{"level":2,"title":"捕获组","slug":"捕获组","link":"#捕获组","children":[{"level":3,"title":"组的编号","slug":"组的编号","link":"#组的编号","children":[]},{"level":3,"title":"反向引用","slug":"反向引用","link":"#反向引用","children":[]}]},{"level":2,"title":"边界匹配","slug":"边界匹配","link":"#边界匹配","children":[]},{"level":2,"title":"前瞻后顾","slug":"前瞻后顾","link":"#前瞻后顾","children":[]},{"level":2,"title":"匹配标志位","slug":"匹配标志位","link":"#匹配标志位","children":[]},{"level":2,"title":"FAQ","slug":"faq","link":"#faq","children":[{"level":3,"title":"String表达式加反斜杠？","slug":"string表达式加反斜杠","link":"#string表达式加反斜杠","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1694501966000,"updatedTime":1694501966000},"readingTime":{"minutes":8.81,"words":2644},"filePathRelative":"java/base/regex-pattern.md","localizedDate":"July 24, 2023","excerpt":"<p>正则基本上算是每个开发语言的标配，其重要性不言而谕。之所以正则经久不衰，主要在于它在文字处理方面展现出恐怖而全面的能力。今天我们就来了解下这个文字处理神器：正则表达式。</p>\\n<h2> 什么是正则表达式</h2>\\n<p>正则表达式是用字符串描述的一个匹配规则，它们可用于搜索、编辑或操作文本和数据。正则的实现百家争鸣，各个语言实现的版本具有差异化，常见的有grep、Perl、Tcl、Python、PHP和awk，但是不用过于担心基本上是大同小异。</p>\\n<p>我们今天主要说的是java中的正则，它的风格算是跟<code>Perl</code>走得最为接近。java是面向对象的，表达正则肯定是用对象了。那么会有那些对象呢？</p>","copyright":{"author":"huhx","license":"MIT"}}');export{e as data};
