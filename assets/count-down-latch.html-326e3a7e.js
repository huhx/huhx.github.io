const t=JSON.parse('{"key":"v-b1b51f1c","path":"/java/concurrency/count-down-latch.html","title":"倒计时器CountDownLatch","lang":"en-US","frontmatter":{"title":"倒计时器CountDownLatch","date":"2023-08-11T00:00:00.000Z","category":"java","tag":["Concurrency-Toolkit","Concurrency"]},"headers":[{"level":2,"title":"CountDownLatch的使用","slug":"countdownlatch的使用","link":"#countdownlatch的使用","children":[]},{"level":2,"title":"CountDownLatch的分析","slug":"countdownlatch的分析","link":"#countdownlatch的分析","children":[]},{"level":2,"title":"FAQ","slug":"faq","link":"#faq","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1694501966000,"updatedTime":1694501966000},"readingTime":{"minutes":3.2,"words":961},"filePathRelative":"java/concurrency/count-down-latch.md","localizedDate":"August 11, 2023","excerpt":"<p><code>CountDownLatch</code>是JDK 5+里面闭锁的一个实现，允许一个或者多个线程等待某个事件的发生。今天我们通过一些实例来学习一下它的用法。</p>\\n<h2> CountDownLatch的使用</h2>\\n<p><code>CountDownLatch</code>被用来同步一个或多个线程，强制它们等待由其他线程执行的一组操作完成。你可以向<code>CountDownLatch</code>对象设置一个初始计数值，任何在这个对象上调用<code>await()</code>方法都将阻塞，直至这个计数值达到<code>0</code>。其他线程在结束工作时，可以在该对象上调用<code>countDown()</code>方法来减小这个计数值。</p>","copyright":{"author":"huhx","license":"MIT"}}');export{t as data};
