const l=JSON.parse('{"key":"v-5338d14c","path":"/java/concurrency/lock-optimization.html","title":"不为人知的锁优化","lang":"en-US","frontmatter":{"title":"不为人知的锁优化","date":"2023-04-09T00:00:00.000Z","category":"java","tag":["Concurrency"]},"headers":[{"level":2,"title":"Jvm中锁的实现与优化","slug":"jvm中锁的实现与优化","link":"#jvm中锁的实现与优化","children":[{"level":3,"title":"偏向锁","slug":"偏向锁","link":"#偏向锁","children":[]},{"level":3,"title":"轻量级锁","slug":"轻量级锁","link":"#轻量级锁","children":[]},{"level":3,"title":"锁膨胀","slug":"锁膨胀","link":"#锁膨胀","children":[]},{"level":3,"title":"自旋锁","slug":"自旋锁","link":"#自旋锁","children":[]},{"level":3,"title":"锁消除","slug":"锁消除","link":"#锁消除","children":[]}]},{"level":2,"title":"锁的优化思路","slug":"锁的优化思路","link":"#锁的优化思路","children":[{"level":3,"title":"减少锁持有时间","slug":"减少锁持有时间","link":"#减少锁持有时间","children":[]},{"level":3,"title":"减少锁粒度","slug":"减少锁粒度","link":"#减少锁粒度","children":[]},{"level":3,"title":"锁分离","slug":"锁分离","link":"#锁分离","children":[]},{"level":3,"title":"锁粗化","slug":"锁粗化","link":"#锁粗化","children":[]}]},{"level":2,"title":"FAQ","slug":"faq","link":"#faq","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1694501966000,"updatedTime":1694501966000},"readingTime":{"minutes":2.04,"words":613},"filePathRelative":"java/concurrency/lock-optimization.md","localizedDate":"April 9, 2023","excerpt":"<h2> Jvm中锁的实现与优化</h2>\\n<h3> 偏向锁</h3>\\n<h3> 轻量级锁</h3>\\n<h3> 锁膨胀</h3>\\n<h3> 自旋锁</h3>\\n<h3> 锁消除</h3>\\n<h2> 锁的优化思路</h2>\\n<p>在实际的应用中，如果能够在代码的应用层面上进行合理的锁优化，也是会提升系统性能的。这里我们就展开讲讲锁的优化思路。</p>\\n<h3> 减少锁持有时间</h3>\\n<p>减少锁的持有时间，其实就是移出没有必要加锁的操作。想想看如果每个人(线程)占了餐馆的位置，并在上面吃饭、打游戏(费时操作)，如果是就餐高峰期。每个人占着位置1个多小时，那么就会造成其他很多人没办法就餐。模拟程序如下</p>","copyright":{"author":"huhx","license":"MIT"}}');export{l as data};
