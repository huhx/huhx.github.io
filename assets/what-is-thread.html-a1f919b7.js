const l=JSON.parse('{"key":"v-7d09cd84","path":"/java/thread/what-is-thread.html","title":"什么是线程","lang":"en-US","frontmatter":{"title":"什么是线程","date":"2023-08-04T00:00:00.000Z","category":"java","tag":["Thread","Concurrency"]},"headers":[{"level":2,"title":"什么是线程","slug":"什么是线程","link":"#什么是线程","children":[]},{"level":2,"title":"跟线程相关的概念","slug":"跟线程相关的概念","link":"#跟线程相关的概念","children":[{"level":3,"title":"同步(Synchronous)和异步(Asynchronous)","slug":"同步-synchronous-和异步-asynchronous","link":"#同步-synchronous-和异步-asynchronous","children":[]},{"level":3,"title":"并发(Concurrency)和并行(Parallelism)","slug":"并发-concurrency-和并行-parallelism","link":"#并发-concurrency-和并行-parallelism","children":[]},{"level":3,"title":"临界区","slug":"临界区","link":"#临界区","children":[]},{"level":3,"title":"阻塞(Blocking)和非阻塞(Non-Blocking)","slug":"阻塞-blocking-和非阻塞-non-blocking","link":"#阻塞-blocking-和非阻塞-non-blocking","children":[]}]},{"level":2,"title":"线程生命周期","slug":"线程生命周期","link":"#线程生命周期","children":[{"level":3,"title":"初始(NEW)","slug":"初始-new","link":"#初始-new","children":[]},{"level":3,"title":"可运行(RUNNABLE)","slug":"可运行-runnable","link":"#可运行-runnable","children":[]},{"level":3,"title":"阻塞(BLOCKED)","slug":"阻塞-blocked","link":"#阻塞-blocked","children":[]},{"level":3,"title":"等待(WAITING)","slug":"等待-waiting","link":"#等待-waiting","children":[]},{"level":3,"title":"超时等待(TIMED_WAITING)","slug":"超时等待-timed-waiting","link":"#超时等待-timed-waiting","children":[]},{"level":3,"title":"终止(TERMINATED)","slug":"终止-terminated","link":"#终止-terminated","children":[]}]},{"level":2,"title":"FAQ","slug":"faq","link":"#faq","children":[{"level":3,"title":"多线程在单核处理上会提升性能吗?","slug":"多线程在单核处理上会提升性能吗","link":"#多线程在单核处理上会提升性能吗","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1694501966000,"updatedTime":1694501966000},"readingTime":{"minutes":6.21,"words":1864},"filePathRelative":"java/thread/what-is-thread.md","localizedDate":"August 4, 2023","excerpt":"<p>线程到底是个什么东西，为什么让人如此的着迷？</p>\\n<h2> 什么是线程</h2>\\n<h2> 跟线程相关的概念</h2>\\n<p>说服务端编程还是大量需要并行计算的，而Java也主要占领着服务端市场，那么对Java的并行计算的研究也就显得非常的必要。但首先，我想在这里先介绍几个重要的相关概念。</p>\\n<h3> 同步(Synchronous)和异步(Asynchronous)</h3>\\n<p>同步和异步通常用来形容一次方法调用。同步方法调用一旦开始，调用者必须等到方法调用返回后，才能继续后续的行为。异步方法调用更像一个消息传递，一旦开始方法调用就会立即返回，调用者就可以继续后续的操作。而异步方法通常会在另外一个线程中真实地执行。整个过程不会阻碍调用者的工作。</p>","copyright":{"author":"huhx","license":"MIT"}}');export{l as data};
