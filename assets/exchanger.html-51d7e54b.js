const e=JSON.parse('{"key":"v-a5f1a90c","path":"/java/concurrency/exchanger.html","title":"交换器Exchanger","lang":"en-US","frontmatter":{"title":"交换器Exchanger","date":"2023-08-16T00:00:00.000Z","category":"java","tag":["Concurrency-Toolkit","Concurrency"]},"headers":[{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[]},{"level":2,"title":"分析","slug":"分析","link":"#分析","children":[]},{"level":2,"title":"FAQ","slug":"faq","link":"#faq","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1694501966000,"updatedTime":1694501966000},"readingTime":{"minutes":1.34,"words":403},"filePathRelative":"java/concurrency/exchanger.md","localizedDate":"August 16, 2023","excerpt":"<p>线程之间的协作姿势千姿百态，如果两个线程之间的数据想要互换这该如何实现？对头，<code>Exchanger</code>就是为此而生的。它可以在两个线程之间交换数据，而且只能是<code>2</code>个线程，线程多了还不行。今天我们就通过实例来学习一下<code>Exchanger</code>的用法。</p>\\n<h2> 使用</h2>\\n<p><code>Exchanger</code>是在两个任务之间交换对象的栅栏，当任务进入栅栏时，它们各自拥有一个对象。当他们离开时，它们都拥有之前由对方线程持有的对象。</p>\\n<figure><figcaption>Exchanger</figcaption></figure>","copyright":{"author":"huhx","license":"MIT"}}');export{e as data};
