const e=JSON.parse('{"key":"v-015bd62a","path":"/java/concurrency/thread-pool.html","title":"一探究竟线程池","lang":"en-US","frontmatter":{"title":"一探究竟线程池","date":"2023-08-17T00:00:00.000Z","category":"java","tag":["Concurrency-Toolkit","Concurrency"]},"headers":[{"level":2,"title":"什么是线程池","slug":"什么是线程池","link":"#什么是线程池","children":[{"level":3,"title":"计时任务","slug":"计时任务","link":"#计时任务","children":[]}]},{"level":2,"title":"Jdk的线程池","slug":"jdk的线程池","link":"#jdk的线程池","children":[]},{"level":2,"title":"线程池的原理","slug":"线程池的原理","link":"#线程池的原理","children":[]},{"level":2,"title":"线程池的拓展","slug":"线程池的拓展","link":"#线程池的拓展","children":[]},{"level":2,"title":"ThreadFactory","slug":"threadfactory","link":"#threadfactory","children":[]},{"level":2,"title":"FAQ","slug":"faq","link":"#faq","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1694501966000,"updatedTime":1694501966000},"readingTime":{"minutes":5.22,"words":1567},"filePathRelative":"java/concurrency/thread-pool.md","localizedDate":"August 17, 2023","excerpt":"<p>线程是操作系统的资源，频繁的线程创建和销毁势必会影响并发的吞吐量。java 5引入了线程池实现了线程的复用，很好的解决了线程创建和销毁的问题。今天我们就来看下这个池子中究竟有什么</p>\\n<h2> 什么是线程池</h2>\\n<p>类似于数据库的连接池，线程池里面保存的是线程而不是数据库连接。在线程池中，会有一个或多个可用的线程。当需要使用线程时，就可以从池子中随便取一个可用的空闲线程。当你完成工作时，不必关闭线程，而是把线程归还到线程池中，方便后续的线程需要。</p>\\n<figure><figcaption>Executor 框架</figcaption></figure>\\n<figure><figcaption>Executor 框架</figcaption></figure>","copyright":{"author":"huhx","license":"MIT"}}');export{e as data};
